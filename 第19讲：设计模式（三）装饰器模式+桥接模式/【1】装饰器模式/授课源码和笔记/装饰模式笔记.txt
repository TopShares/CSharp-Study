【装饰器模式】Decorator

一、理论铺垫

装修：一般指代房子。也就是开发商给我们的往往是毛坯房，我们可以根据需要对它装修（基础装修，生活或工作设施的装修）
也就是说不同的住户，装修的内容可以大不一样，也可以有相同的。即使我们装修完了，那么过一段时间也有可能再次装修。

从毛坯房-->生活或工作入驻，需要一系列的过程... 特点：这个过程可多可少，也可以说不好预知。

手机卡：基础套餐A-->5元30M的，+ 短信、定向 

1. 也就是说，我们软件开发需要实现一个特定任务，而这个任务需要一系列的环节，但是这个环节会变化，而且不稳定。

2. 概念：实现方便的，动态的给一个对象添加一些额外的职责（功能），这个对象，在设计的时候，是不知道的！其实这个对象也不用关心！不仅能增加，对原有对象结构不会产生破坏。（开-闭原则）

二、简单应用

例子：一个人购买手机，我们给他添加手机壳、手机挂件、贴膜....

实现的步骤：

【1】添加一个手机类（抽象类）
【2】添加一个具体手机类（实现抽象类）
【3】添加一个装饰器类
【4】添加装饰内容（也就是具体要扩展的功能类）

三、总结好处

我们把这些不确定的任务，给他独立出去，然后通过这种设计模式，在需要的时候，再动态的添加进来，如果任务需要扩展，对我们原有对象没有任何影响。









作业：模拟一个人购买一台车，然后给车做装潢（贴膜、脚垫、坐垫....）
           
