设计模式：《模板方法》

模板方法：定义一个操作中的算法核心骨架，而将一些具体步骤延迟到子类中。模板方法使得子类可以不改变一个算法的结构即可以定义该算法的某些特定步骤。

通俗理解：也就是我们定义一个模板类，这个模板类封装了核心的（共性的）属性和行为，然后通过子类的继承实现子类自己特有的属性和行为，和普通继承不同的地方在于，在模板类中应该有公共的逻辑内容（算法）


案例模拟：产品的加工流程（）

A产品：4个流程

B产品：4个流程

C产品：4个流程

...

以上产品都有共同的流程工艺，但是有相同部分，也有不同部分。


以上案例分析，得出问题：

1.不同对象中，代码大量重复

2.不同对象中，行为有相似的算法。


总结模板方法：

模板方法通过讲公共属性和行为移植到父类中，从而避免子类的大量重复。

其次，通过模板逻辑，对核心业务进行的提取，子类使用更加简单。






















