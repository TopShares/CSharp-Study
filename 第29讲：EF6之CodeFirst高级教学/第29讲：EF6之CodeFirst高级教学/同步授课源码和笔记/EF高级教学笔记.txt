EF高级内容学习

一、在EF中，如何使用存储过程。

需要大家明白：我们现在讲的，不是说在EF中，回归ADO.NET方式的存储过程的调用。

就是我们在创建实体对象模型的时候，我们可以选择存储过程。

二、在CodeFirst开发模式中三种模型关系研究

CodeFirst、DataBaseFirst、ModelFirst,其中后面两个都有demx的可视化工具。这个工具，可以显示的给我展示存储模型、实体模型、映射模型。

但是Code First需要我们首先创建Model，然后根据模型生成数据库。这个模式特别适合小型项目的开发。

特别研究模型中的三种关系：（也就是主外建关系）

示例数据库：MyCodeFistDB

Student、StudentCard、StudentClass、Course...

在CodeFirst中没有demx和DBContext，需要我们自己手动添加。

1、一对一：

DBRelationShips.StudentCard: : EntityType 'StudentCard' has no key defined. Define the key for this EntityType.

StudentCards: EntityType: EntitySet 'StudentCards' is based on type 'StudentCard' that has no keys defined.

2、一对多：



3、多对多：（需要中间表，中间表中通常存放着两个表的主键  A -->C--->B）

Course课程：多个学生可以选择一个课程，一个学生也可选多个课程

当我们通过模型创建关系的时候，会帮我们自动生成中间表CourseStudents

重点体会：多对多创建需要的IColections<>

其实我们上面的各种关系和操作，很多都是基于默认方式生成。我们的感觉就是非常不方便。

我们可以通过DataAnotation和Flunet API修改默认约定。

三、通过DataAnotation修改默认协定

引出：实际开发中，我们不可能全部都遵守默认写法，必须有自定义的数据表类特征的方法。（约束）

比如：string 都是string varchar(max)  ....

大家可以参考官网：http://www.entityframeworktutorial.net/code-first/what-is-code-first.aspx

以上我们练习，其实挺简单，但是通过我们自定义添加属性特性，加深大家对Model创建的理解。

使用CodeFirst：首先添加Model，同时添加Attribute（约束），然后添加DBContext。

还有一些问题，我们还得需要Fluent Api方式来修改。
























