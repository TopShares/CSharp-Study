授课内容：面向切面编程（AOP）的几种实现

一、如何理解AOP：

1.基本概念：AOP（Aspect Oriented Programming）是一种能够在现有面向对象封装的基础上，为了满足业务扩展的需求，而在程序运行时，动态添加某种程序的一种技术组合方式。

2.应用好处：

【1】项目开发中：让更专业的人，关注更专业的业务。比如，我们到银行取款或者查询，基本流程如下：

验证用户-->查询余额-->结束查询

验证用户-->执行取款-->结束取款

【2】项目开发后：如果我们想给某些业务动态增加一些功能，对原有的业务没有任何影响，可以使用AOP。

3.AOP和OOP、设计模式的关系

OOP：是我们设计各种类的基本方法和原则。使用OOP的各种设计原则和方法，程序总体框架设计是完全没有问题的。

设计模式：是为了更好的解决业务的可扩展问题，设计模式需要直接应用到现有的框架基础上。

需要你在设计的时候，就应该考虑到。和现有框架是融合到一起的。

AOP：不仅在项目框架设计中，而且完全可以在项目框架之外，动态的增加扩展功能。而对原有的封装是没有任何影响的。

特性也是AOP思想的一种体现。

也就是再我们项目设计中，如果我们没有考虑到某些业务，可以轻松的通过AOP方法“注入”到现有的业务中。

总结：OOP设计项目主框架，设计模式配合主框架完成优化，AOP既可以做到“后悔药”弥补某些业务的补助。也可以事先预防。


二、AOP的实现

1. 基于装饰器设计模式为业务切入新任务。

案例内容：腾讯课堂，学员报名课程的基本业务模拟

 --》验证现有课程是否有时间冲突+付款验证（第三方的）-->课程订单的处理--》上课提醒（短信提醒、QQ弹窗提醒）






















































































