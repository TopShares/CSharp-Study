
今天主题：设计模式《备忘录模式》（Memento）

1.概念思想：在不破坏当前架构封装性的前提下，记录某一个对象的内部状态，并在该对象之外保存这个状态。以后可以很方便的在特定情况下恢复对象以前的某些状态。

本质：实现对象部分数据的保存和恢复。

2. 常用例子：office或其他软件的撤销、回退等功能。典型的还有我们操作系统的“还原点”。

3. 备忘录模式的原型：

【1】发起者（Originator）：需要备份的实体。同时负责创建一个备忘录。用来记住当前它的内部状态，并可以在适当的时候恢复。

【2】备忘录（Memento）：用于将备份的实体状态信息保存到该实体。（负责存储Originator对象的内部状态）。

【3】管理者（Caretaker）：（中间人）关联备忘录实体。（其实就是负责保存备忘录，但是不能修改备忘录的内容）

4.关于对象状态保存的对吧和解释

【1】对象的复制（序列化等）：是保存对象的所有数据，并且在使用中，外面会轻松的访问这个对象的所有接口数据

【2】备忘录模式：当我们需要保存对象的部分状态时，并且不希望所有的接口数据都对外提供，这个模式可以很好的解决。因为可以根据需要决定保存哪些数据、恢复哪些数据。也就是说备忘录模式把要保存的细节封装到了Memento类中。如果后面要更改保存的细节，只需要更改备忘录。让客户端和原始对象做了解耦。

5.应用场合

当软件功能比较复杂的时候，我们需要维护和记录对象的相关属性，而这些数据仅仅是对象的一部分，使用此模式。

前面我们也讲过命令模式可以撤销，这时候，我们可以考虑命令模式使用备忘录模式来存储可撤销的操作状态。

还有，其他一些时候，我们需要将对象的信息保存到对象以外地方，但是需要对象自己读取，这时候使用备忘录模式可以负责对象内部信息，并和其他对象隔离。








