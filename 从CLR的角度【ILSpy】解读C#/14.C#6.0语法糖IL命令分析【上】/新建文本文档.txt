

一：从IL的角度去看C# 6.0中的新语法。。。 【VS2015】

1. 自动属性初始化 (Initializers for auto-properties)

    public class Person
    {
        public string Name { get; set; } = "Hello World";
    }

IL代码：
    public class Test
    {
        private string k__BackingField = "Hello World";

        public string K__BackingField
        {
            get
            {
                return k__BackingField;
            }

            set
            {
                k__BackingField = value;
            }
        }
    }

2. 只读属性初始化Getter-only auto-properties

    public class Person
    {
        public string Name { get; } = "Hello World";
    }

    public class Test
    {
        private string k__BackingField = "Hello World";

        public string K__BackingField
        {
            get
            {
                return k__BackingField;
            }
        }
    }


3. 用Lambda作为函数体Expression bodies on method-like members

   我们一直强调的两个角度，一个叫做     “编译器” 的角度，
			   还有一个叫做 ”CLR“    的角度。
			 

4.  在Using中可以指定一个静态类，然后可以在随后的代码中直接使用静态的成员

    虽然我们可以方便的using，但是变成IL之后，还是原来的模式：

    void [mscorlib]System.Console::WriteLine(string)

5.  空值判断Null-conditional operators　

            var list = new List<int> { 1, 2, 3 };

            var length = list?.Count;   //非常像三目运算符。。。

     也就说说，如果list为null，  则length为null
	       如果list不为null，则length=list.length;

     我们可以清清楚楚的看到。  “?." 就是三目运算符。。


 .method private hidebysig static void  Main(string[] args) cil managed
{
  .entrypoint
  // Code size       60 (0x3c)
  .maxstack  2
  .locals init ([0] class [mscorlib]System.Collections.Generic.List`1<int32> list,
           [1] valuetype [mscorlib]System.Nullable`1<int32> length,
           [2] class [mscorlib]System.Collections.Generic.List`1<int32> V_2,
           [3] valuetype [mscorlib]System.Nullable`1<int32> V_3)
  IL_0000:  nop
  IL_0001:  newobj     instance void class [mscorlib]System.Collections.Generic.List`1<int32>::.ctor()
  IL_0006:  stloc.2
  IL_0007:  ldloc.2
  IL_0008:  ldc.i4.1
  IL_0009:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<int32>::Add(!0)
  IL_000e:  nop
  IL_000f:  ldloc.2
  IL_0010:  ldc.i4.2
  IL_0011:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<int32>::Add(!0)
  IL_0016:  nop
  IL_0017:  ldloc.2
  IL_0018:  ldc.i4.3
  IL_0019:  callvirt   instance void class [mscorlib]System.Collections.Generic.List`1<int32>::Add(!0)
  IL_001e:  nop
  IL_001f:  ldloc.2
  IL_0020:  stloc.0
  IL_0021:  ldloc.0
  IL_0022:  brtrue.s   IL_002f
  IL_0024:  ldloca.s   V_3
  IL_0026:  initobj    valuetype [mscorlib]System.Nullable`1<int32>
  IL_002c:  ldloc.3
  IL_002d:  br.s       IL_003a
  IL_002f:  ldloc.0
  IL_0030:  call       instance int32 class [mscorlib]System.Collections.Generic.List`1<int32>::get_Count()
  IL_0035:  newobj     instance void valuetype [mscorlib]System.Nullable`1<int32>::.ctor(!0)
  IL_003a:  stloc.1
  IL_003b:  ret
} // end of method Program::Main

   

