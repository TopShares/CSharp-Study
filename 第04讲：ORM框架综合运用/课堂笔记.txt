
主题：ORM自定框架分析 + 基于泛型设计多数据库通用访问类

ORM自定义框架方向：
【1】将现有ADO.NET操作方法进行封装 
【2】以后可以结合LINQ实现“无SQL”（水平基本达到微软EF的60%）

回顾：ADO.NET 操作方法（CRUD）主要痛点

-->SQL语句比较多？需要从对象-->SQL语句的转换。

-->对于查询的封装过程，也是一件非常麻烦的事情。

ORM就是要把以上我们自己写的SQL语句变成自动生成SQL语句；就是要把对象封装变成自动封装。

ORM框架实现的基本思路：

1. 根据需要自定义一组“特性类”。

2. 将所定义的特性类，应用到我们所使用的实体类中。（也就是说，我们实际开发中，用代码生成器，把所有的实体类先生成，然后我们在编写对应的数据访问类的时候，根据需要应用特性）其实就是先把实体类准备好。然后按照模块开发。

3. 编写Insert语句生成的方法。

思路：实体类属性是数据表字段的映射。所以，我们根据实体类属性名称，组合成SQL语句中对应的字段名称。
但是，因为我们定义的实体类有扩展属性，相关的标识列属性，那么我们生成SQL语句的时候，要注意过来掉。

循环生成insert语句中的字段时，把“标识列、非映射字段、非法的时间、值为null的字段”全部过滤掉。


能不能自动完成批量更新（insert、update、delete）

回答：肯定能！

基本思路：我们将需要批量修改的对象，肯定放到一个集合中。然后我们遍历集合生成即可。

特别注意：我们怎么判断当前这个对象是insert？update？delete？我们需要给实体类单独添加一个扩展属性，标识当前的操作状态。inserted、updated、deleted

最后把生成的SQL语句放到SQL语句集合中，调用基于事务的提交方法。

这个任务，作为作业，请大家自行完成！

ORM中查询的自动封装。

基本思路：就是根据查询的结果，封装成不同的对象，对象属性和属性值是我们研究的重点。
因为我们查询的时候，结果对应不同的对象，我们就应该考虑泛型。

=======================基于泛型设计多数据库通用访问类

解决痛点：当我们访问不同数据库的时候，需要写不同的Helper










