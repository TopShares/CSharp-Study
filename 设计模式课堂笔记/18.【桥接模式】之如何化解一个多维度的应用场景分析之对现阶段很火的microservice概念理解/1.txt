一：桥接模式

  【降维】

一个类中有两个对象，这两个对象是各自发展的 【两个维度】，那么面对这种场景，我们需要用桥接模式。。。


public class phone{
   brand  => 可以扩展：【华为，小米，格力】
   soft   => 可以扩展：【通讯录，游戏】
}

采用普通的方式：

华为的通讯录，华为的游戏。。。小米的通讯录。。。=> 3 x 2 = 6 个类。。。


天语，波导  他们中的游戏和通讯录是不能共享的。。。  【手机和游戏是一一匹配的】


品牌 和 游戏 是耦合的。。。  phone


需求变更： 比如说增加一个品牌：摩托罗拉 M


二：如果进行解耦


解耦的方式：就是让各自的rank独自发展。。。【现在的手机发展行业】


小米手机【安卓】，华为手机【安卓】    


ctrip app， 58同城 app， taobao app


     brand                        soft
 
  xiaomi   huawei         address        game


public class brand{
  Soft soft;
}

面对多维度发展，你这时候用继承模式不是特别多，导致子类爆炸。。。

这时候用组合【聚合】模式，可以缓解这种子类爆炸的问题。。。


从新增需求来看，非常符合开闭原则。。。


三：项目中的例子

桥接模式最大的意思在哪里？？？  架构意义

microservice 【微服务】

按照业务进行拆分我们的系统。。。


1. getway 

2. zookeeper  服务发现

3. docker，devops


      pc          app

    ==== getwway  =====

plane    hotel   car  train



public class ctrip
{
  ...
}


